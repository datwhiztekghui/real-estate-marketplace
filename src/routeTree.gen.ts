/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ListPropertyImport } from './routes/list-property'
import { Route as ConnectWalletImport } from './routes/connect-wallet'
import { Route as BrowseImport } from './routes/browse'
import { Route as IndexImport } from './routes/index'
import { Route as PropertyIdImport } from './routes/property.$id'

// Create/Update Routes

const ListPropertyRoute = ListPropertyImport.update({
  id: '/list-property',
  path: '/list-property',
  getParentRoute: () => rootRoute,
} as any)

const ConnectWalletRoute = ConnectWalletImport.update({
  id: '/connect-wallet',
  path: '/connect-wallet',
  getParentRoute: () => rootRoute,
} as any)

const BrowseRoute = BrowseImport.update({
  id: '/browse',
  path: '/browse',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PropertyIdRoute = PropertyIdImport.update({
  id: '/property/$id',
  path: '/property/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/browse': {
      id: '/browse'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof BrowseImport
      parentRoute: typeof rootRoute
    }
    '/connect-wallet': {
      id: '/connect-wallet'
      path: '/connect-wallet'
      fullPath: '/connect-wallet'
      preLoaderRoute: typeof ConnectWalletImport
      parentRoute: typeof rootRoute
    }
    '/list-property': {
      id: '/list-property'
      path: '/list-property'
      fullPath: '/list-property'
      preLoaderRoute: typeof ListPropertyImport
      parentRoute: typeof rootRoute
    }
    '/property/$id': {
      id: '/property/$id'
      path: '/property/$id'
      fullPath: '/property/$id'
      preLoaderRoute: typeof PropertyIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/list-property': typeof ListPropertyRoute
  '/property/$id': typeof PropertyIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/list-property': typeof ListPropertyRoute
  '/property/$id': typeof PropertyIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/list-property': typeof ListPropertyRoute
  '/property/$id': typeof PropertyIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/browse'
    | '/connect-wallet'
    | '/list-property'
    | '/property/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/browse' | '/connect-wallet' | '/list-property' | '/property/$id'
  id:
    | '__root__'
    | '/'
    | '/browse'
    | '/connect-wallet'
    | '/list-property'
    | '/property/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BrowseRoute: typeof BrowseRoute
  ConnectWalletRoute: typeof ConnectWalletRoute
  ListPropertyRoute: typeof ListPropertyRoute
  PropertyIdRoute: typeof PropertyIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BrowseRoute: BrowseRoute,
  ConnectWalletRoute: ConnectWalletRoute,
  ListPropertyRoute: ListPropertyRoute,
  PropertyIdRoute: PropertyIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/browse",
        "/connect-wallet",
        "/list-property",
        "/property/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/browse": {
      "filePath": "browse.tsx"
    },
    "/connect-wallet": {
      "filePath": "connect-wallet.tsx"
    },
    "/list-property": {
      "filePath": "list-property.tsx"
    },
    "/property/$id": {
      "filePath": "property.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
